/*
 * Sentilab SARE: a Sentiment Analysis Research Environment
 * Copyright (C) 2013 Sabanci University Sentilab
 * http://sentilab.sabanciuniv.edu
 * 
 * This file is part of SARE.
 * 
 * SARE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *  
 * SARE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with SARE. If not, see <http://www.gnu.org/licenses/>.
 */

package edu.sabanciuniv.sentilab.utils.text.nlp.base;

/**
 * The base class for all classes that describe POS tags. 
 * @author Mus'ab Husaini
 */
public abstract class PosTag extends LinguisticObject {

	public static final String NOUN = "noun";
	public static final String ADJECTIVE = "adjective";
	public static final String ADVERB = "adverb";
	public static final String VERB = "verb";
	
	protected String tag;
	
	/**
	 * Creates an instance of the {@link PosTag} class.
	 * @param processor the {@link ILinguisticProcessor} that was used to produce this data.
	 * @param tag the tag that was generated by the processor.
	 */
	protected PosTag(ILinguisticProcessor processor, String tag) {
		super(processor);
		this.tag = tag;
	}

	/**
	 * Attempt to get a simplified version of this POS tag. If not, returns the original tag.
	 * @return a simplified version of the POS tag.
	 */
	public abstract String getSimpleTag();
	
	/**
	 * Gets the original tag that was produced by the processor.
	 * @return the original tag.
	 */
	public String getTag() {
		return this.tag;
	}
	
	/**
	 * Convenience method to check if this POS tag is a noun POS or not.
	 * @return a {@code boolean} flag indicating whether this POS tag is a noun or not.
	 */
	public boolean isNoun() {
		return NOUN.equalsIgnoreCase(this.getSimpleTag());
	}
	
	/**
	 * Convenience method to check if this POS tag is an adjective POS or not.
	 * @return a {@code boolean} flag indicating whether this POS tag is an adjective or not.
	 */
	public boolean isAdjective() {
		return ADJECTIVE.equalsIgnoreCase(this.getSimpleTag());
	}
	
	/**
	 * Convenience method to check if this POS tag is an adverb POS or not.
	 * @return a {@code boolean} flag indicating whether this POS tag is an adverb or not.
	 */
	public boolean isAdverb() {
		return ADVERB.equalsIgnoreCase(this.getSimpleTag());
	}
	
	/**
	 * Convenience method to check if this POS tag is a verb POS or not.
	 * @return a {@code boolean} flag indicating whether this POS tag is a verb or not.
	 */
	public boolean isVerb() {
		return VERB.equalsIgnoreCase(this.getSimpleTag());
	}
	
	@Override
	public String toString() {
		return this.getSimpleTag();
	}
}