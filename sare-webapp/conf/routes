###
# Sentilab SARE: a Sentiment Analysis Research Environment
# Copyright (C) 2013 Sabanci University Sentilab
# http://sentilab.sabanciuniv.edu
#
# This file is part of SARE.
#
# SARE is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# SARE is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SARE. If not, see <http://www.gnu.org/licenses/>.
###

# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           			controllers.base.Application.homePage()

# Authentication
POST	/api/session				controllers.base.Application.keepAlive()
DELETE	/api/session				controllers.base.Application.logout()
POST	/api/session/login			controllers.base.Application.login()

GET		/view/session/login				controllers.base.Application.loginPage()
GET		/view/session/logout			controllers.base.Application.logoutPage()

# Collections
GET		/api/collections				controllers.CollectionsController.list()
GET		/api/collections/:collection	controllers.CollectionsController.get(collection: String)
DELETE	/api/collections/:collection	controllers.CollectionsController.delete(collection: String)

# Documents
GET		/api/collections/:collection/documents				controllers.DocumentsController.list(collection: String)
GET		/api/collections/:collection/documents/:document	controllers.DocumentsController.get(collection: String, document: String)

# Modules
GET		/api/modules/options/:input			controllers.ModuleController.options(input: String)
GET		/view/modules						controllers.ModuleController.landingPage()

POST	/api/modules/opinions								controllers.modules.CorpusModule.create()
POST	/api/modules/opinions/:corpus						controllers.modules.CorpusModule.update(corpus: String)
POST	/api/modules/opinions/:corpus/documents				controllers.modules.CorpusModule.addDocument(corpus: String)
POST	/api/modules/opinions/:corpus/documents/:document	controllers.modules.CorpusModule.updateDocument(corpus: String, document: String)
DELETE	/api/modules/opinions/:corpus/documents/:document	controllers.modules.CorpusModule.deleteDocument(corpus: String, document: String)

GET		/view/modules/corpora					controllers.modules.CorpusModule.modulePage(partial: Boolean ?= false)
GET		/view/modules/corpora/:corpus/form		controllers.modules.CorpusModule.storeDetailsForm(corpus: String)

GET		/view/modules/reduction/:corpus		controllers.modules.SetCoverModule.modulePage(corpus: String, partial: Boolean ?= false)

# Support queries
GET		/api/support/languages		controllers.modules.CorpusModule.supportedLanguages()

# Map static resources from the /public folder to the /assets URL path
GET    /assets/javascripts/routes      			controllers.base.Application.javascriptRoutes()
GET     /assets/*file               			controllers.Assets.at(path="/public", file)